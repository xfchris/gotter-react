{"version":3,"sources":["components/modal/basicModal/BasicModal.js","utils/validations.js","utils/constants.js","api/auth.js","components/signUpForm/SignUpForm.js","components/signInForm/SignInForm.js","page/SingInSingUp/SingInSingUp.js","utils/context.js","api/tweets.js","components/modal/tweetModal/TweetModal.js","components/LeftMenu/LeftMenu.js","layout/BasicLayout/BasicLayout.js","api/user.js","components/listTweets/ListTweets.js","utils/functions.js","page/Home/Home.js","components/modal/configModal/ConfigModal.js","components/user/editUserForm/EditUserForm.js","components/bannerAvatar/BannerAvatar.js","api/follow.js","components/user/infoUser/InfoUser.js","page/User/User.js","components/listUsers/ListUsers.js","page/Users/Users.js","routes/configRouting.js","page/Error/Error404.js","routes/Routing.js","App.js","serviceWorker.js","index.js","assets/png/logow.png","assets/png/logo.png"],"names":["BasicModal","show","setShow","children","Modal","className","onHide","centered","size","Header","Title","src","LogoWhite","alt","Body","isEmailValid","email","test","String","toLowerCase","API_HOST","AVATAR_NOT_FOUND","getTokenApi","localStorage","getItem","logoutApi","removeItem","isUserLoged","token","JwtDecode","exp","Date","now","isExpired","SignUpForm","setShowModal","useState","initialFormValue","formData","setFormData","signUpLoading","setSignUpLoading","Form","onSubmit","e","preventDefault","validCount","values","some","value","password","toast","warning","repeatPassword","user","url","userTemp","fechaNacimiento","params","method","headers","body","JSON","stringify","fetch","then","response","status","json","code","message","result","catch","err","signUpApi","Response","success","error","finally","onChange","target","name","Group","Row","Col","Control","type","placeholder","defaultValue","nombres","apellidos","Button","variant","Spinner","animation","SignInForm","setRefreshCheckLogin","initialFDState","signInApi","setItem","required","SingInSingUp","showModal","contentModal","setContentModal","Container","fluid","LeftComponent","RightComponent","openModal","content","xs","LogoTwittor","icon","faSearch","faUsers","faComments","LogoWhiteTwittor","onClick","AuthContext","createContext","getUserTweetsApi","idUser","page","Authorization","TweetModal","setMessage","faTimes","length","mensaje","data","addTweetApi","window","location","reload","as","rows","classNames","disabled","LeftMenu","context","useContext","to","faHome","_id","faUser","faPowerOff","BasicLayout","getUserApi","id","uploadBannerApi","file","FormData","append","uploadAvatarApi","updateInfoApi","ListTweets","tweets","map","tweet","Tweet","key","text","userInfo","setUserInfo","avatarUrl","setAvatarUrl","useEffect","user_id","avatar","Image","roundedCircle","moment","fecha","calendar","dangerouslySetInnerHTML","__html","replace","formatModel","tweetsTemp","forEach","obj","push","usuarioseguido_id","ConfigModal","title","EditUserForm","loading","setLoading","biografia","ubicacion","sitioWeb","initialValue","banner","bannerUrl","setBannerUrl","bannerFile","setBannerFile","onDropBanner","useCallback","acceptedFile","URL","createObjectURL","useDropzone","accept","noKeyboard","multiple","onDrop","getRootBannerProps","getRootProps","getInputBannerProps","getInputProps","avatarFile","setAvatarFile","onDropAvatar","getRootAvatarProps","getInputAvatarProps","a","style","backgroundImage","faCamera","row","locale","es","selected","BannerAvatar","userLogged","following","setFollowing","reloadFollow","setReloadFollow","bannerURL","avatarURL","checkFollowApi","unfollowUserApi","followUserApi","InfoUser","faMapMarkedAlt","faExternalLinkAlt","href","parent","faCalendarAlt","localization","format","withRouter","match","setUser","buscoUsuario","setBuscoUsuario","setTweets","setPage","loadingTweets","setLoadingTweets","pageTemp","role","arian-hidden","ListUsers","users","isEmpty","User","res","Media","Link","width","height","path","exact","history","setUsers","queryString","parse","search","useUserQuery","typeUsers","setTypeUsers","txtSearch","setTxtSearch","btnLoading","setBtnLoading","paramsUrl","getUsersApi","onChangeType","useDebouncedCallback","v","onSearch","ButtonGroup","newPage","parseInt","aria-hidden","getTweetsFollowersApi","Routing","configRouting","route","index","App","loadUser","setLoadUser","refreshCheckLogin","Provider","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","module","exports"],"mappings":"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","file":"static/js/main.040f49d8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport LogoWhite from \"../../../assets/png/logow.png\";\nimport \"./BasicModal.scss\";\n\nexport default function BasicModal({ show, setShow, children }) {\n  return (\n    <Modal className=\"basic-modal\" show={show}\n    onHide={()=>setShow(false)}\n    centered\n    size=\"lg\">\n      <Modal.Header>\n          <Modal.Title>\n              <img src={LogoWhite} alt=\"Twittor\" />\n          </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{children}</Modal.Body>\n    </Modal>\n  );\n}\n","export function isEmailValid(email) {\n    // eslint-disable-next-line no-useless-escape\n    const emailValid = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    return emailValid.test(String(email).toLowerCase());\n  }\n  ","export const API_HOST = \"https://twittgo-co.herokuapp.com\"\n\n\nexport const AVATAR_NOT_FOUND = \"https://4.bp.blogspot.com/-CuZOfJdrDKY/UYmig8q88yI/AAAAAAAAEZM/bzVtIKPhXVA/s1600/Satoshi-nakamoto.gif\"\n\nexport const TOKEN = \"token\"","import { API_HOST, TOKEN } from \"../utils/constants\"\nimport JwtDecode from \"jwt-decode\"\n\nexport function signInApi(user) {\n    const url = `${API_HOST}/login`\n    const userTemp = {\n        ...user,\n        email: user.email.toLowerCase()\n    }\n\n    const params = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userTemp)\n    }\n\n    return fetch(url, params)\n        .then(response => {\n            if (response.status >= 200 && response.status < 300) {\n                return response.json()\n            }\n            return { code: 404, message: \"Datos incorrectos\" }\n        })\n        .then(token => {\n            return token\n        })\n        .catch(err => {\n            return err\n        })\n}\n\n\nexport function signUpApi(user) {\n\n    const url = `${API_HOST}/registro`\n\n    const userTemp = {\n        ...user,\n        email: user.email.toLowerCase(),\n        fechaNacimiento: new Date()\n    }\n    delete userTemp.repeatPassword\n\n    const params = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userTemp)\n    }\n\n    return fetch(url, params)\n        .then(response => {\n            if (response.status >= 200 && response.status < 300) {\n                return response.json()\n            }\n            return { code: 404, message: \"Email no disponible\" }\n        })\n        .then(result => {\n            return result\n        })\n        .catch(err => {\n            return err\n        })\n}\n\n\nexport function setTokenApi(token) {\n    localStorage.setItem(TOKEN, token)\n}\n\nexport function getTokenApi() {\n    return localStorage.getItem(TOKEN)\n}\n\nexport function logoutApi() {\n    localStorage.removeItem(TOKEN)\n}\n\nexport function isUserLoged() {\n    const token = getTokenApi()\n\n    if (!token) {\n        logoutApi()\n        return null\n    }\n\n    if (isExpired(token)) {\n        logoutApi()\n    }\n    return JwtDecode(token)\n}\n\n//Si un token espiró\nfunction isExpired(token) {\n    const { exp } = JwtDecode(token)\n\n    const expire = exp * 1000\n    const timeout = expire - Date.now()\n\n    return (timeout < 0)\n}","import React, { useState } from \"react\"\nimport { Row, Col, Form, Button, Spinner } from \"react-bootstrap\"\nimport { values, size } from 'lodash'\nimport { toast } from 'react-toastify'\n\nimport \"./SignUpForm.scss\"\nimport { isEmailValid } from \"../../utils/validations\"\nimport { signUpApi } from \"../../api/auth\"\n\nexport default function SignUpForm({ setShowModal }) {\n  const [formData, setFormData] = useState(initialFormValue)\n  const [signUpLoading, setSignUpLoading] = useState(false)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    let validCount = 0\n    values(formData).some(value => {\n      value && validCount++\n      return null\n    })\n\n\n    //VALIDACIONES\n\n    if (validCount !== size(formData)) {\n      toast.warning(\"Completa todos los campos del formulario\")\n      return\n    }\n    if (!isEmailValid(formData.email)) {\n      toast.warning(\"Email inválido\")\n      return\n    }\n\n    if (size(formData.password) < 6) {\n      toast.warning(\"La contraseña debe de tener mas de 6 caracteres\")\n      return\n    }\n\n    if (formData.password !== formData.repeatPassword) {\n      toast.warning(\"La contraseña debe de ser igual\")\n      return\n    }\n\n    setSignUpLoading(true)\n    signUpApi(formData)\n      .then(Response => {\n        if (Response.code) {\n          toast.warning(Response.message)\n        } else {\n          toast.success(\"Registro correcto\")\n          setShowModal(false)\n\n        }\n      })\n      .catch(() => toast.error(\"Error del servidor\"))\n      .finally(() => setSignUpLoading(false))\n  }\n\n\n\n\n\n\n  const onChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    })\n  }\n  return (\n    <div className=\"sign-up-form\">\n      <h2>Crea tu cuenta</h2>\n      <Form onSubmit={onSubmit} onChange={onChange}>\n        <Form.Group>\n          <Row>\n            <Col>\n              <Form.Control type=\"text\" placeholder=\"Nombres\"\n                name=\"nombres\"\n                defaultValue={formData.nombres}\n              />\n            </Col>\n            <Col>\n              <Form.Control type=\"text\" placeholder=\"Apellidos\"\n                name=\"apellidos\"\n                defaultValue={formData.apellidos}\n              />\n            </Col>\n          </Row>\n        </Form.Group>\n\n        <Form.Group>\n          <Row>\n            <Col>\n              <Form.Control type=\"email\" placeholder=\"Email\"\n                name=\"email\"\n                defaultValue={formData.email}\n              />\n            </Col>\n          </Row>\n        </Form.Group>\n\n        <Form.Group>\n          <Row>\n            <Col>\n              <Form.Control type=\"password\" placeholder=\"Contraseña\"\n                name=\"password\"\n                defaultValue={formData.password}\n              />\n            </Col>\n            <Col>\n              <Form.Control type=\"password\" placeholder=\"Repetir contraseña\"\n                name=\"repeatPassword\"\n                defaultValue={formData.repeatPassword}\n              />\n            </Col>\n          </Row>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          {!signUpLoading ? 'Registro' : <Spinner animation=\"border\" />}\n\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nfunction initialFormValue() {\n  return {\n    nombres: \"\",\n    apellidos: \"\",\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n  }\n}\n","import React, { useState } from 'react'\nimport { Form, Button, Spinner } from \"react-bootstrap\"\nimport { size, values } from 'lodash'\nimport { toast } from 'react-toastify'\n\nimport \"./SignInForm.scss\"\nimport { isEmailValid } from '../../utils/validations'\nimport { signInApi, setTokenApi } from '../../api/auth'\n\n\nexport default function SignInForm({ setRefreshCheckLogin }) {\n    const [formData, setFormData] = useState(initialFDState)\n    const [signUpLoading, setSignUpLoading] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        //Realizo validaciones\n        let validCount = 0\n        values(formData).some(value => {\n            value && validCount++\n            return null\n        })\n\n        if (validCount !== size(formData)) {\n            toast.warning(\"Rellena todos los campos del formulario\")\n            return\n        }\n\n        if (!isEmailValid(formData.email)) {\n            toast.warning(\"Email inválido\")\n            return\n        }\n\n        //Si llega hasta aqui, submit.\n        setSignUpLoading(true)\n\n        signInApi(formData)\n            .then(Response => {\n                if (Response.code) {\n                    toast.warning(Response.message)\n                } else {\n                    setTokenApi(Response.token)\n                    setRefreshCheckLogin(true)\n                }\n            })\n            .catch(() => {\n                toast.error(\"Error de conexion\")\n            })\n            .finally(() => {\n                setSignUpLoading(false)\n            })\n    }\n\n    const onChange = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    return (\n        <div className=\"sign-in-form\">\n            <h2>Entrar</h2>\n            <Form onSubmit={onSubmit} onChange={onChange}>\n                <Form.Group>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        defaultValue={formData.email}\n                        required />\n                </Form.Group>\n                <Form.Group>\n\n                    <Form.Control\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Escribe contraseña\"\n                        defaultValue={formData.password} />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    {signUpLoading ? <Spinner animation=\"border\" /> : \"Iniciar sesión\"}\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\n\nfunction initialFDState() {\n    return {\n        email: \"\",\n        password: \"\"\n    }\n}","import React, { useState } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"./SingInSingUp.scss\";\nimport LogoWhiteTwittor from \"../../assets/png/logow.png\";\nimport LogoTwittor from \"../../assets/png/logo.png\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faUsers,\n  faComments,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport BasicModal from \"../../components/modal/basicModal\";\nimport SignUpForm from \"../../components/signUpForm\";\nimport SignInForm from \"../../components/signInForm\";\n\nexport default function SingInSingUp({ setRefreshCheckLogin }) {\n  const [showModal, setShowModal] = useState(false);\n  const [contentModal, setContentModal] = useState(\"SDASDFASDF\");\n\n  const openModal = (content) => {\n    setShowModal(true);\n    setContentModal(content);\n  };\n\n  return (\n    <>\n      <Container className=\"singin-singup\" fluid>\n        <Row>\n          <LeftComponent />\n          <RightComponent\n          setRefreshCheckLogin={setRefreshCheckLogin} \n          openModal={openModal} setShowModal={setShowModal} />\n        </Row>\n      </Container>\n      <BasicModal show={showModal} setShow={setShowModal}>\n        {contentModal}\n      </BasicModal>\n    </>\n  );\n}\n\nfunction LeftComponent() {\n  return (\n    <Col className=\"singin-singup__left\" xs={6}>\n      <img src={LogoTwittor} alt=\"Twittor\" />\n      <div>\n        <h2>\n          <FontAwesomeIcon icon={faSearch} />\n          Sigue lo que te interesa\n        </h2>\n        <h2>\n          <FontAwesomeIcon icon={faUsers} />\n          Enterate de lo que esta pasando aqui\n        </h2>\n        <h2>\n          <FontAwesomeIcon icon={faComments} />\n          Unete a la conversación\n        </h2>\n      </div>\n    </Col>\n  );\n}\n\nfunction RightComponent({ openModal, setShowModal, setRefreshCheckLogin }) {\n  return (\n    <Col className=\"singin-singup__right\" xs={6}>\n      <div>\n        <img src={LogoWhiteTwittor} alt=\"Twittor\" />\n        <h2>Mira lo que está pasando en el mundo en este momento</h2>\n        <h3>Únete a twittor ahora mismo</h3>\n        <Button\n          onClick={() => openModal(<SignUpForm setShowModal={setShowModal} />)}\n          variant=\"primary\"\n        >\n          Regístrate\n        </Button>\n        <Button\n          onClick={() => openModal(<SignInForm \n            setRefreshCheckLogin={setRefreshCheckLogin} />)}\n          variant=\"outline-primary\"\n        >\n          Iniciar sesión\n        </Button>\n      </div>\n    </Col>\n  );\n}\n","import { createContext } from \"react\"\n\nexport const AuthContext = createContext()","\nimport { getTokenApi } from './auth'\nimport { API_HOST } from '../utils/constants'\n\nexport function addTweetApi(mensaje) {\n    const url = API_HOST + '/crear-tweet'\n\n    const params = {\n        method: \"POST\",\n        headers: {\n            Authorization: 'Bearer' + getTokenApi()\n        },\n        body: JSON.stringify({\n            mensaje\n        })\n    }\n\n    return fetch(url, params)\n        .then(response => {\n            if (response.status >= 200 && response.status < 300) {\n                return response.json()\n            }\n            return { code: 500, message: \"Error del servidor\" }\n        })\n        .then(result => {\n            return { code: 200, data: result }\n        })\n        .catch(err => err)\n}\n\nexport function getUserTweetsApi(idUser, page = 0) {\n    const url = API_HOST + \"/leer-tweet?id=\" + idUser + \"&page=\" + page\n\n    const params = {\n        headers: {\n            Authorization: 'Bearer' + getTokenApi()\n        }\n    }\n\n    return fetch(url, params)\n        .then(response => {\n            return response.json()\n        })\n        // .then(res=>res)\n        .catch(err => err)\n}\n\nexport function getTweetsFollowersApi(page = 1) {\n    const url = API_HOST + '/leer-seguidores?page=' + page\n    const params = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: 'Bearer' + getTokenApi()\n        }\n    }\n\n    return fetch(url, params)\n        .then(response => response.json())\n        .catch(err => err)\n}","import React, { useState } from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport classNames from 'classnames'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './TweetModal.scss'\nimport { addTweetApi } from '../../../api/tweets'\nimport { toast } from 'react-toastify'\n\nexport default function TweetModal({ show, setShow }) {\n\n    const [message, setMessage] = useState(\"\")\n    const maxLength = 28\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (message.length > 0 && message.length <= maxLength) {\n            addTweetApi(message)\n                .then(response => {\n                    if (response.code === 500) {\n                        toast.error(\"Error al enviar el tweet\")\n                    } else {\n                        toast.success(\"Tweet enviado\")\n                        setShow(false)\n                        window.location.reload()\n                    }\n                })\n                .catch(err => toast.error(\"Error del servidor\"))\n        }\n    }\n\n    const onChange = e => {\n        setMessage(e.target.value)\n    }\n    return (\n        <Modal\n            className=\"tweet-modal\"\n            show={show}\n            onHide={() => setShow(false)}\n            centered\n            size=\"lg\"\n        >\n\n            <Modal.Header>\n                <Modal.Title>\n                    <FontAwesomeIcon icon={faTimes}\n                        onClick={() => setShow(false)} />\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={onSubmit}\n                    onChange={onChange}>\n                    <Form.Control\n                        defaultValue={message}\n                        as=\"textarea\"\n                        rows=\"3\"\n                        placeholder=\"Que estas pensando?\" />\n\n                    <span className={\n                        classNames(\"count\", {\n                            error: message.length > maxLength\n                        })\n                    }>\n                        {message.length}\n                    </span>\n\n                    <Button type=\"submit\"\n                        disabled={message.length > maxLength || message.length < 5} >\n                        Twittear\n                    </Button>\n\n                </Form>\n            </Modal.Body>\n        </Modal>\n\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { Button } from \"react-bootstrap\"\nimport { Link } from 'react-router-dom'\n\nimport LogoWhiteTwittor from \"../../assets/png/logow.png\";\n//import LogoTwittor from \"../../assets/png/logo.png\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faHome,\n    faUsers,\n    faUser,\n    faPowerOff\n} from '@fortawesome/free-solid-svg-icons'\n\nimport './LeftMenu.scss'\nimport { logoutApi } from '../../api/auth';\n\nimport { AuthContext } from '../../utils/context';\nimport TweetModal from '../modal/tweetModal/TweetModal';\n\nexport default function LeftMenu() {\n    const context = useContext(AuthContext)\n    const [showModal, setShowModal] = useState(false)\n    const logout = () => {\n        logoutApi()\n        context.setRefreshCheckLogin(true)\n    }\n\n    return (\n\n        <div className=\"left-menu\">\n            <img className=\"logo\" src={LogoWhiteTwittor} alt=\"twittor\" />\n\n            <Link to=\"/\">\n                <FontAwesomeIcon icon={faHome} /> Inicio\n            </Link>\n            <Link to=\"/users\">\n                <FontAwesomeIcon icon={faUsers} /> Usuarios\n            </Link>\n            <Link to={'/'+context.user?._id}>\n                \n                <FontAwesomeIcon icon={faUser} /> Perfil\n            </Link>\n            <Link to=\"\" onClick={logout}>\n                <FontAwesomeIcon icon={faPowerOff} /> Cerrar sesión\n            </Link>\n\n            <Button variant=\"primary\"\n            onClick={() => setShowModal(true)}>\n                Twittear\n            </Button>\n\n            <TweetModal\n            show={showModal}\n            setShow={setShowModal} />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Container, Row, Col } from \"react-bootstrap\"\n\nimport './BasicLayout.scss'\nimport LeftMenu from '../../components/LeftMenu/LeftMenu'\n\nexport default function BasicLayout({className, children}) {\n    return (\n        <Container className={\"basic-layout \"+className}>\n            <Row>\n                <Col xs=\"3\" className=\"basic-layout__menu\">\n                    <LeftMenu />\n                </Col>\n                <Col xs=\"9\" className=\"basic-layout__content\">\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n","import { API_HOST } from '../utils/constants'\nimport { getTokenApi } from './auth'\n\n\nexport function getUserApi(id) {\n    const url = `${API_HOST}/ver-perfil?id=${id}`\n\n    const params = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer\" + getTokenApi()\n        }\n    }\n\n    return fetch(url, params)\n        .then(response => {\n            if (response.status >= 400)\n                return null\n            return response.json()\n        })\n        .then(result => {\n            return result\n        })\n        .catch(err => {\n            return err\n        })\n}\n\n\nexport function uploadBannerApi(file) {\n    const url = API_HOST + '/subir-banner'\n\n    const formData = new FormData()\n    formData.append(\"banner\", file)\n    const params = {\n        method: \"POST\",\n        headers: {\n            Authorization: 'Bearer' + getTokenApi()\n        },\n        body: formData\n    }\n\n    return fetch(url, params)\n        .then(response => {\n            return response.json()\n        })\n        .then(result => result)\n        .catch(err => err)\n}\n\n\nexport function uploadAvatarApi(file) {\n    const url = API_HOST + '/subir-avatar'\n\n    const formData = new FormData()\n    formData.append(\"avatar\", file)\n    const params = {\n        method: \"POST\",\n        headers: {\n            Authorization: 'Bearer' + getTokenApi()\n        },\n        body: formData\n    }\n\n    return fetch(url, params)\n        .then(response => {\n            return response.json()\n        })\n        .then(result => result)\n        .catch(err => err)\n}\n\nexport function updateInfoApi(data) {\n    const url = API_HOST + '/editar-perfil'\n\n    const params = {\n        method: \"PUT\",\n        headers: {\n            Authorization: 'Bearer' + getTokenApi()\n        },\n        body: JSON.stringify(data)\n    }\n\n    return fetch(url, params)\n        .then(response => response)\n        .catch(err => err)\n}\n\n\nexport function getUsersApi(paramsUrl) { //page, type, search\n    const url = API_HOST + '/leer-usuarios?' + paramsUrl\n\n    const params = {\n        headers: {\n            Authorization: 'Bearer' + getTokenApi()\n        }\n    }\n\n    return fetch(url, params)\n        .then(response => response.json())\n        .catch(err => err)\n}","import React, { useState, useEffect } from 'react'\nimport { Image } from 'react-bootstrap'\nimport { map } from 'lodash'\nimport './ListTweets.scss'\nimport { getUserApi } from '../../api/user'\nimport { AVATAR_NOT_FOUND, API_HOST } from '../../utils/constants'\nimport moment from 'moment'\nimport { replaceURLWithHTMLLinks } from '../../utils/functions'\n\nexport default function ListTweets({ tweets }) {\n    return (\n        <div className=\"list-tweets\">\n            {map(tweets, tweet => (\n                <Tweet key={tweet.id} tweet={tweet} />\n            ))}\n        </div>\n    )\n}\n\n\nfunction Tweet({ tweet }) {\n    const [userInfo, setUserInfo] = useState(null)\n    const [avatarUrl, setAvatarUrl] = useState(null)\n\n    useEffect(() => {\n        getUserApi(tweet.user_id)\n            .then(response => {\n                setUserInfo(response)\n\n                setAvatarUrl(\n                    response?.avatar\n                        ? API_HOST + '/obtener-avatar?id=' + response.id\n                        : AVATAR_NOT_FOUND\n                )\n            })\n    }, [tweet])\n\n\n\n\n    return (\n        <div className=\"tweet\">\n            <Image className=\"avatar\" src={avatarUrl}\n                roundedCircle />\n            <div>\n                <div className=\"name\">\n                    {userInfo?.nombres} {userInfo?.apellidos}\n                    <span>{moment(tweet.fecha).calendar()}</span>\n                </div>\n                <div\n                    dangerouslySetInnerHTML={{\n                        __html: replaceURLWithHTMLLinks(tweet.mensaje)\n                    }} />\n            </div>\n\n        </div>\n    )\n}","/* eslint-disable no-useless-escape */\nexport function replaceURLWithHTMLLinks(text) {\n    var exp = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi;\n    return text?.replace(exp, \"<a href='$1' target='_blank'>$1</a>\");\n}","import React, { useState, useEffect } from 'react'\nimport { Spinner, Button } from 'react-bootstrap'\nimport './Home.scss'\nimport BasicLayout from '../../layout/BasicLayout'\nimport { getTweetsFollowersApi } from '../../api/tweets'\nimport ListTweets from '../../components/listTweets'\n\nexport default function Home() {\n\n    const [tweets, setTweets] = useState(null)\n    const [page, setPage] = useState(1)\n    const [loadingTweets, setLoadingTweets] = useState(false)\n\n    useEffect(() => {\n        getTweetsFollowersApi(page)\n            .then(res => {\n\n                if (!tweets && res) {\n                    setTweets(formatModel(res))\n                } else {\n                    if (!res) {\n                        setLoadingTweets(0)\n                    } else {\n                        setTweets([...tweets, ...formatModel(res)])\n                        setLoadingTweets(false)\n                    }\n                }\n\n            }).catch(()=>{})\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [page])\n\n    const moreData = () => {\n        setLoadingTweets(true)\n        setPage(page + 1)\n\n    }\n\n    return (\n        <BasicLayout className=\"home\">\n            <div className=\"home__title\">\n                <h2>Inicio</h2>\n            </div>\n            <ListTweets tweets={tweets} />\n            <Button onClick={moreData}\n                className=\"load-more\">\n                {!loadingTweets ? (\n                    loadingTweets !== 0 ? \"Obtener más tweets\" : \"No hay mas tweets\"\n                ) : (\n                        <Spinner\n                            as=\"span\"\n                            animation=\"grow\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\" />\n                    )}\n            </Button>\n\n        </BasicLayout>\n    )\n}\n\n\nfunction formatModel(tweets) {\n    const tweetsTemp = []\n    tweets.forEach(obj => {\n        tweetsTemp.push({\n            id: obj.Tweet.id,\n            mensaje: obj.Tweet.mensaje,\n            fecha: obj.Tweet.fecha,\n            user_id: obj.usuarioseguido_id\n        })\n    })\n    return tweetsTemp\n}","import React from 'react'\nimport './ConfigModal.scss'\nimport { Modal } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function ConfigModal({ show, setShow, title, children }) {\n    return (\n        <Modal\n            className=\"config-modal\"\n            show={show}\n            onHide={() => setShow(false)}\n            centered\n            size=\"lg\"\n        >\n            <Modal.Header>\n                <Modal.Title>\n                    <FontAwesomeIcon icon={faTimes}\n                        onClick={() => setShow(false)} />\n                    <h2>{title}</h2>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {children}\n            </Modal.Body>\n        </Modal>\n    )\n}\n","import React, { useState, useCallback } from 'react'\nimport { Form, Button, Row, Col, Spinner } from 'react-bootstrap'\nimport './EditUserForm.scss'\nimport DatePicker from 'react-datepicker'\nimport es from 'date-fns/locale/es'\nimport { useDropzone } from 'react-dropzone'\nimport { API_HOST } from '../../../utils/constants'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCamera } from '@fortawesome/free-solid-svg-icons'\nimport { uploadBannerApi, uploadAvatarApi, updateInfoApi } from '../../../api/user'\nimport { toast } from 'react-toastify'\n\nexport default function EditUserForm({ user, setShowModal }) {\n\n    const [loading, setLoading] = useState(false)\n    const [formData, setFormData] = useState(initialValue(user))\n\n    //Banner URL\n    const [bannerUrl, setBannerUrl] = useState(\n        user?.banner ? `${API_HOST}/obtener-banner?id=${user.id}` : null\n    )\n    const [bannerFile, setBannerFile] = useState(null)\n\n    const onDropBanner = useCallback(acceptedFile => {\n        const file = acceptedFile[0]\n        setBannerUrl(URL.createObjectURL(file))\n        setBannerFile(file)\n    }, [])\n\n    const { getRootProps: getRootBannerProps,\n        getInputProps: getInputBannerProps } =\n        useDropzone({\n            accept: \"image/jpeg, image/png\",\n            noKeyboard: true,\n            multiple: false,\n            onDrop: onDropBanner\n        })\n    //Fin Banner URL\n\n\n\n    //Avatar URL\n\n    const [avatarUrl, setAvatarUrl] = useState(\n        user?.avatar ? `${API_HOST}/obtener-avatar?id=${user.id}` : null\n    )\n\n    const [avatarFile, setAvatarFile] = useState(null)\n\n    const onDropAvatar = useCallback(acceptedFile => {\n        const file = acceptedFile[0]\n        setAvatarUrl(URL.createObjectURL(file))\n        setAvatarFile(file)\n    },[])\n    const { getRootProps: getRootAvatarProps,\n        getInputProps: getInputAvatarProps } = useDropzone({\n            accept: \"image/jpeg, image/png\",\n            noKeyboard: true,\n            multiple: false,\n            onDrop: onDropAvatar\n        })\n    //Fin Avatar URL\n\n\n    const onSubmit = async (e) => {\n        e.preventDefault()\n        setLoading(true)\n\n        if (bannerFile) {\n            await uploadBannerApi(bannerFile).catch(() => {\n                toast.error(\"Error al subir nuevo banner\")\n            })\n        }\n\n        if (avatarFile) {\n            await uploadAvatarApi(avatarFile).catch(() => {\n                toast.error(\"Error al subir nuevo avatar\")\n            })\n        }\n\n        await updateInfoApi(formData)\n            .then(() => {\n                setShowModal(false)\n            })\n            .catch(() => {\n                toast.error(\"Error al actualizar los datos\")\n            })\n\n\n        window.location.reload()\n        setLoading(false)\n    }\n\n\n    const onChange = e => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    return (\n        <div className=\"edit-user-form\">\n\n            <div className=\"banner\"\n                style={{ backgroundImage: `url('${bannerUrl}')` }}\n                {...getRootBannerProps()}>\n                <input {...getInputBannerProps()} />\n                <FontAwesomeIcon icon={faCamera} />\n            </div>\n\n            <div className=\"avatar\"\n                style={{ backgroundImage: `url('${avatarUrl}')` }}\n                {...getRootAvatarProps()}>\n                <input {...getInputAvatarProps()} />\n                <FontAwesomeIcon icon={faCamera} />\n            </div>\n\n\n            <Form onSubmit={onSubmit}>\n                <Form.Group>\n                    <Row>\n                        <Col>\n                            <Form.Control type=\"text\"\n                                onChange={onChange}\n                                defaultValue={formData.nombres}\n                                placeholder=\"Nombres\" name=\"nombres\" />\n                        </Col>\n                        <Col>\n                            <Form.Control type=\"text\"\n                                onChange={onChange}\n                                defaultValue={formData.apellidos}\n                                placeholder=\"Nombres\" name=\"nombres\" />\n                        </Col>\n                    </Row>\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Control\n                        as=\"textarea\"\n                        row=\"3\"\n                        placeholder=\"Agrega tu biografia\"\n                        defaultValue={formData.biografia}\n                        name=\"biografia\"\n                        onChange={onChange}\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control type=\"text\"\n                        onChange={onChange}\n                        placeholder=\"Sitio web\"\n                        defaultValue={formData.sitioWeb}\n\n                        name=\"sitioWeb\" />\n                </Form.Group>\n\n\n                <DatePicker\n                    onChange={value => setFormData({\n                        ...formData,\n                        fechaNacimiento: value\n                    })}\n                    placeholder=\"Fecha de nacimiento\"\n                    locale={es}\n                    selected={new Date(formData.fechaNacimiento)}\n                />\n\n                <Button className=\"btn-submit\" variant=\"primary\"\n                    type=\"submit\">\n\n                    {loading && <Spinner animation=\"border\" size=\"sm\" />} Actualizar\n                    </Button>\n\n\n            </Form>\n        </div>\n    )\n}\n\n\n\n\nfunction initialValue(user) {\n    return {\n        nombres: user.nombres || \"\",\n        apellidos: user.apellidos || \"\",\n        biografia: user.biografia || \"\",\n        ubicacion: user.ubicacion || \"\",\n        sitioWeb: user.sitioWeb || \"\",\n        fechaNacimiento: user.fechaNacimiento || \"\"\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { API_HOST, AVATAR_NOT_FOUND } from '../../utils/constants'\nimport \"./BannerAvatar.scss\"\nimport { Button } from 'react-bootstrap'\nimport ConfigModal from '../modal/configModal'\nimport EditUserForm from '../user/editUserForm/EditUserForm'\nimport { checkFollowApi, followUserApi, unfollowUserApi } from '../../api/follow'\n\n\nexport default function BannerAvatar({ user, userLogged }) {\n\n    const [showModal, setShowModal] = useState(false)\n    const [following, setFollowing] = useState(null)\n    const [reloadFollow, setReloadFollow] = useState(false)\n    const bannerURL = user?.banner ? API_HOST + \"/obtener-banner?id=\" + user.id : null\n    const avatarURL = user?.avatar ? API_HOST + \"/obtener-avatar?id=\" + user.id : AVATAR_NOT_FOUND\n\n\n    useEffect(() => {\n        checkFollowApi(user?.id)\n            .then(response => {\n                if (response?.status) {\n                    setFollowing(response.status)\n                } else {\n                    setFollowing(false)\n                }\n            })\n        setReloadFollow(false)\n    }, [user, reloadFollow])\n\n\n    const onFollow = () => {\n        followUserApi(user.id).then(() => {\n            setReloadFollow(true)\n        })\n    }\n\n    const onUnFollow = () => {\n        unfollowUserApi(user.id).then(() => {\n            setReloadFollow(true)\n        })\n    }\n\n\n\n    return (\n        <div className=\"banner-avatar\"\n            style={{ backgroundImage: 'url(' + bannerURL + ')' }}>\n            <div className=\"avatar\"\n                style={{ backgroundImage: 'url(' + avatarURL + ')' }}\n            />\n            <div className=\"options\">\n                {user && user.id === userLogged._id && (\n                    <Button onClick={() => setShowModal(true)}>Editar perfil</Button>\n                )}\n\n                {user && user.id !== userLogged._id && (\n                    following !== null && (\n                        (following ?\n                            <Button onClick={onUnFollow} className=\"unfollow\">\n                                <span>Siguiendo</span>\n                            </Button> :\n                            <Button onClick={onFollow}>Seguir</Button>)\n                    )\n                )}\n            </div>\n\n            <ConfigModal\n                show={showModal}\n                setShow={setShowModal}\n                title=\"Editar Perfil\"\n            >\n\n                <EditUserForm user={user} setShowModal={setShowModal} />\n            </ConfigModal>\n        </div>\n    )\n}\n","\nimport { getTokenApi } from './auth'\nimport { API_HOST } from '../utils/constants'\n\nexport function checkFollowApi(idUser){\n    const url = API_HOST + '/consultar-seguidor?id=' + idUser\n\n    const params = {\n        headers: {\n            Authorization: 'Bearer' + getTokenApi()\n        }\n    }\n\n    return fetch(url, params)\n        .then(Response => Response.json())\n        .then(result => result)\n        .catch(err => err)\n}\n\n\nexport function followUserApi(idUser){\n    const url = API_HOST + '/seguir-usuario?id=' + idUser\n\n    const params = {\n        method: \"POST\",\n        headers: {\n            Authorization: 'Bearer' + getTokenApi()\n        }\n    }\n\n    return fetch(url, params)\n        .then(Response => Response.json())\n        .then(result => result)\n        .catch(err => err)\n}\n\nexport function unfollowUserApi(idUser){\n    const url = API_HOST + '/borrar-seguidor?id=' + idUser\n\n    const params = {\n        method: \"DELETE\",\n        headers: {\n            Authorization: 'Bearer' + getTokenApi()\n        }\n    }\n\n    return fetch(url, params)\n        .then(Response => Response.json())\n        .then(result => result)\n        .catch(err => err)\n}","import React from 'react'\nimport './InfoUser.scss'\nimport { faMapMarkedAlt, faCalendarAlt, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport moment from 'moment'\nimport localization from 'moment/locale/es'\n\nexport default function InfoUser({ user }) {\n\n    return (\n        <div className=\"info-user\">\n            <h2 className=\"name\">\n\n                {user?.nombres} {user?.apellidos}\n            </h2>\n\n            <p className=\"email\">\n                {user?.email}\n            </p>\n\n            {user?.biografia &&\n                <div className=\"description\">{user.biografia}</div>\n            }\n            <div className=\"more-info\">\n                {user?.ubicacion &&\n                    <p>\n                        <FontAwesomeIcon icon={faMapMarkedAlt} /> {user.ubicacion}\n                    </p>\n                }\n\n                {user?.sitioWeb &&\n                    <p>\n                        <FontAwesomeIcon icon={faExternalLinkAlt} /> <a href={user.sitioWeb} parent=\"_blank\">{user.sitioWeb}</a>\n                    </p>\n                }\n\n                {user?.fechaNacimiento &&\n                    <p>\n                        <FontAwesomeIcon icon={faCalendarAlt} />\n                        {moment(user.fechaNacimiento).locale(\"es\", localization).format('LL')}\n                    </p>\n                }\n\n\n\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react'\n\nimport './User.scss'\nimport BasicLayout from '../../layout/BasicLayout'\nimport { Button, Spinner } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport { getUserApi } from '../../api/user'\nimport { toast } from 'react-toastify'\nimport BannerAvatar from '../../components/bannerAvatar/Index'\nimport { AuthContext } from '../../utils/context'\nimport InfoUser from '../../components/user/infoUser'\nimport { getUserTweetsApi } from '../../api/tweets'\nimport ListTweets from '../../components/listTweets'\n\nfunction User({ match }) {\n    const [user, setUser] = useState(null)\n    const [buscoUsuario, setBuscoUsuario] = useState(false)\n    const [tweets, setTweets] = useState(null)\n    const userLogged = (useContext(AuthContext)).user\n    const [page, setPage] = useState(1)\n    const [loadingTweets, setLoadingTweets] = useState(null)\n    useEffect(() => {\n        getUserApi(match.params.id)\n            .then(response => {\n                setBuscoUsuario(true)\n                setUser(response)\n                if (!response) {\n                    toast.error(\"El usuario no existe\")\n                }\n            })\n            .catch(() => {\n                toast.error(\"Error de conexion\")\n            })\n    }, [match.params])\n\n    useEffect(() => {\n        if (match.params.id) {\n            getUserTweetsApi(match.params.id, 1)\n                .then(response => {\n                    setTweets(response)\n                })\n                .catch(() => setTweets([]))\n        }\n\n    }, [match.params])\n\n    const getMasTweets = () => {\n        const pageTemp = page+1\n        setLoadingTweets(true)\n\n        getUserTweetsApi(match.params.id, pageTemp)\n        .then(response => {\n            if (!response){\n                setLoadingTweets(0)\n            }else{\n                setTweets([...tweets, ...response])\n                setPage(pageTemp)\n                setLoadingTweets(false)\n            }\n\n        })\n        .catch(err=>{\n            toast.error(\"Error al cargar los tweets\")\n        })\n    }\n\n    return (\n        <BasicLayout className=\"user\">\n            {!user ?\n                (<>\n                    {buscoUsuario ? <h2>Este usuario no existe</h2> : ''}\n                </>)\n                :\n                (<>\n                    <div className=\"user__title\">\n                        <h2>{user.nombres} {user.apellidos}</h2>\n                    </div>\n\n                    <BannerAvatar user={user} userLogged={userLogged} />\n\n                    <InfoUser user={user} />\n                    <div className=\"user__tweets\">\n                        <h3>Lista de tweets</h3>\n                        {tweets && tweets.length > 0 &&\n                            <ListTweets tweets={tweets} />}\n\n                        <Button onClick={getMasTweets}>\n                            {!loadingTweets ? (\n                                loadingTweets !== 0 && 'Obtener mas twets'\n                            ) :\n                                <Spinner\n                                    as=\"span\"\n                                    animation=\"grow\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    arian-hidden=\"true\" />\n                            }\n                        </Button>\n                    </div>\n                </>)}\n        </BasicLayout>\n    )\n}\n\nexport default withRouter(User)","import React, { useState, useEffect } from 'react'\nimport { Media, Image } from \"react-bootstrap\"\nimport { Link } from 'react-router-dom'\n\nimport { map, isEmpty } from 'lodash'\nimport { getUserApi } from '../../api/user'\nimport { API_HOST, AVATAR_NOT_FOUND } from '../../utils/constants'\nimport './ListUsers.scss'\n\n\nexport default function ListUsers({ users }) {\n\n    if (isEmpty(users)) {\n        return <h2>No hay resultados</h2>\n    }\n    return (\n        <div className=\"list-users\">\n            {map(users, user => (\n                <User key={user.id} user={user} />\n            ))}\n        </div>\n    )\n}\n\n\nfunction User({ user }) {\n\n    const [userInfo, setUserInfo] = useState(null)\n\n    useEffect(() => {\n        getUserApi(user.id)\n            .then(res => {\n                setUserInfo(res)\n            })\n    }, [user])\n\n    return (\n        <Media as={Link} to={'/' + user.id}\n            className=\"list-users__user\">\n            <Image\n                width=\"64\"\n                height=\"64\"\n                roundedCircle\n                className=\"mr-3\"\n                src={\n                    userInfo?.avatar\n                        ? API_HOST + '/obtener-avatar?id=' + user.id\n                        : AVATAR_NOT_FOUND\n                }\n                alt={user.nombres + ' ' + user.apellidos}\n            />\n            <Media.Body>\n                <h5>{user.nombres} {user.apellidos} </h5>\n                <p>{userInfo?.biografia}</p>\n            </Media.Body>\n        </Media>\n    )\n}\n\n\n","import React, { useState, useEffect } from 'react'\nimport { Spinner, ButtonGroup, Button } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport queryString from 'query-string'\nimport { useDebouncedCallback } from 'use-debounce'\n\nimport BasicLayout from '../../layout/BasicLayout'\nimport { getUsersApi } from '../../api/user'\nimport ListUsers from '../../components/listUsers/ListUsers'\nimport './Users.scss'\nimport { isEmpty } from 'lodash'\n\n\nfunction Users({ location, history }) {\n\n    const [users, setUsers] = useState(null)\n    const params = useUserQuery(location)\n    const [typeUsers, setTypeUsers] = useState(params.type || 'follow')\n    const [txtSearch, setTxtSearch] = useState(params.search || '')\n    const [btnLoading, setBtnLoading] = useState(false)\n\n\n\n    useEffect(() => {\n        getUsersApi(queryString.stringify(params))\n            .then(response => {\n\n                // eslint-disable-next-line eqeqeq\n                if (params.page == 1){\n                    if (isEmpty(response)) {\n                        setUsers([])\n                        setBtnLoading(0)\n\n                    } else {\n                        setUsers(response)\n                        setBtnLoading(false)\n                    }\n                }else{\n                    if (isEmpty(response)) {\n                        setBtnLoading(0)\n                    } else {\n                        setUsers([...users, ...response])\n                        setBtnLoading(false)\n                    }\n                }\n                \n\n            }).catch(\n                (err) => toast.error(\"Error al obtener usuarios\")\n            )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [location])\n\n\n    const onChangeType = type => {\n        setUsers(null)\n        if (type === 'new') {\n            setTypeUsers('new')\n        } else {\n            setTypeUsers('follow')\n        }\n\n        setTxtSearch('')\n        history.push({\n            search: queryString.stringify({ type: type, page: 1, search: \"\" })\n        })\n    }\n\n    //Para buscar despues de un tiempo\n    const [onSearch] = useDebouncedCallback(v => {\n        setUsers(null)\n\n        history.push({\n            search: queryString.stringify({ ...params, page: 1, search: v })\n        })\n    }, 500)\n\n    const moreData = () => {\n        setBtnLoading(true)\n        const newPage = parseInt(params.page) + 1\n        history.push({\n            search: queryString.stringify({ ...params, page: newPage })\n        })\n    }\n\n\n    return (\n        <BasicLayout className=\"users\">\n            <div className=\"users__title\">\n                <h2>Usuarios</h2>\n                <input type=\"text\"\n                    value={txtSearch}\n                    onChange={(e) => {\n                        onSearch(e.target.value)\n                        setTxtSearch(e.target.value)\n                    }}\n                    placeholder=\"Busca un usuario...\" />\n            </div>\n\n            <ButtonGroup className=\"users__options\">\n                <Button onClick={() => onChangeType(\"follow\")}\n                    className={typeUsers === 'follow' && 'active'}>Siguiendo</Button>\n                <Button onClick={() => onChangeType(\"new\")}\n                    className={typeUsers === 'new' && 'active'}>Nuevos</Button>\n            </ButtonGroup>\n\n            {!users ? (\n                <div className=\"users__loading\">\n                    <Spinner animation=\"border\" variant=\"auto\" />\n                    Buscando usuarios\n                </div>\n            ) : <>\n                    <ListUsers users={users} />\n                    <Button onClick={moreData} className=\"load-more\">\n                        {!btnLoading ? (\n                            btnLoading !== 0 && \"Cargar mas usuarios\"\n                        ) : (\n                                <Spinner\n                                    as=\"span\"\n                                    animation=\"grow\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    aria-hidden=\"true\" />\n                            )}\n                    </Button>\n                </>}\n\n        </BasicLayout>\n    )\n}\n\nfunction useUserQuery(location) {\n    const { page = 1, type = \"follow\", search } = queryString.parse(location.search)\n    return { page, type, search }\n}\n\nexport default withRouter(Users)","import Home from \"../page/Home\";\nimport Error404 from \"../page/Error/Error404\";\nimport User from \"../page/User\";\nimport Users from \"../page/Users\";\n\nexport default [\n    {\n        path: \"/users\",\n        exact: true,\n        page: Users\n    },\n    {\n        path: \"/\",\n        exact: true,\n        page: Home\n    },\n    {\n        path: \"/:id\",\n        page: User,\n        exact:true\n    },\n    {\n        path: \"*\",\n        page: Error404\n    }\n\n]","import React from 'react'\nimport BasicLayout from '../../layout/BasicLayout'\nimport './Error404.scss'\nimport { Link } from 'react-router-dom'\n\nexport default function Error404() {\n    return (\n        <div className=\"error404\">\n            <h1>Error 404</h1>\n            <Link to=\"/\">Volver al inicio</Link>\n        </div>\n    )\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { map } from 'lodash'\nimport configRouting from './configRouting'\n\nexport default function Routing() {\n    return (\n        <Router>\n            <Switch>\n                {map(configRouting, (route, index) => (\n                    <Route key={index}\n                        path={route.path}\n                        exact={route.exact}\n                    >\n                        <route.page />\n                    </Route>\n                ))}\n            </Switch>\n        </Router>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport SingInSingUp from './page/SingInSingUp'\nimport { ToastContainer } from 'react-toastify'\nimport { AuthContext } from './utils/context';\nimport { isUserLoged } from './api/auth';\nimport Routing from './routes/Routing';\n\nexport default function App() {\n\n  const [user, setUser] = useState(null)\n  const [loadUser, setLoadUser] = useState(false)\n  const [refreshCheckLogin, setRefreshCheckLogin] = useState(false)\n\n  useEffect(() => {\n    setUser(isUserLoged())\n    setRefreshCheckLogin(false)\n    setLoadUser(true)\n  }, [refreshCheckLogin])\n\n  if (!loadUser) return null\n\n\n  return (\n    <AuthContext.Provider value={{user, setRefreshCheckLogin}}>\n      {!user ?\n        (<>\n          <SingInSingUp setRefreshCheckLogin={setRefreshCheckLogin} />\n        </>\n        ) : (\n          <Routing />\n        )\n      }\n\n\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss />\n\n    </AuthContext.Provider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logow.41f65f75.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.1769587d.png\";"],"sourceRoot":""}